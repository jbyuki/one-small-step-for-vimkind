;;; ../lua-debug
;; implement handlers
function handlers.next(request)
  local depth = 0
  ; get stack depth with debug getinfo
  ; set stack level to current
  ; set next variable
  ; continue running
  sendProxyDAP(make_response(request, {}))
end

;; script variables
local stack_level = 0
local next = false
local monitor_stack = false

;; set stack level to current
stack_level = depth

;; set next variable
next = true
monitor_stack = true

;; disable next
next = false
monitor_stack = false

;; check if next
elseif event == "line" and next and depth >= 0 and depth <= stack_level then
  ; send stopped event step
  ; disable next

  ; freeze neovim instance

;; get stack depth with debug getinfo
local surface = 0
local off = 0
while true do
  local info = debug.getinfo(off, "S")
  if not info then
    break
  end

  local inside_osv = false
  ; check if inside osv
  if inside_osv then
    surface = off
  end
  off = off + 1
end
; save for next head start
depth = (off - 1) - surface
