;;; lua-debug
;; implement
function M.start_server(host, port, do_log)
  ; init logger server
  ; create server
  ; bind server
  ; listen server
  ; connect to hook
	; create autocommand when exit in server

  return {
    host = host,
    port = server:getsockname().port
  }
end

;; init logger server
if do_log then
  log_filename = vim.fn.stdpath("data") .. "/osv.log"
end

;; create server
local server = vim.loop.new_tcp()

;; bind server
server:bind(host, port)

;; script variables
-- for now, only accepts a single
-- connection
local client

;; listen server
server:listen(128, function(err)
  ; accept server
  ; socket variables

  client = sock

  ; create reading coroutine
  ; start reading
end)

if not server:getsockname() then
	return nil
end

print("Server started on " .. server:getsockname().port)

;; accept server
local sock = vim.loop.new_tcp()
server:accept(sock)

;; script variables
local debug_hook_conn 

;; connect to hook
if debug_hook_conn_address then
  debug_hook_conn = vim.fn.sockconnect("pipe", debug_hook_conn_address, {rpc = true})
end

